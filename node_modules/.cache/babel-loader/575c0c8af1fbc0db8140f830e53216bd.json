{"ast":null,"code":"var _jsxFileName = \"C:\\\\1.Regine\\\\PDA-APP\\\\frontend\\\\src\\\\AnalysisPage\\\\components\\\\dropbox\\\\dropbox.js\";\nimport React from 'react';\nimport './dropbox.css';\nimport Dropzone from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropzoneContainer = props => {\n  // Checks whether the file passed in is a json\n  const isJson = fileType => {\n    if (fileType === 'json') {\n      return true;\n    } else {\n      return false;\n    }\n  }; // Check whether a json file has been uploaded previously. \n  // This is for consequtive uploads before pressing process\n\n\n  const checkHistoryForJson = history => {\n    for (var i = 0; i < history.length; i++) {\n      var fileType = history[i].path.split('.').slice(-1)[0];\n\n      if (isJson(fileType)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dropzone, {\n    onDrop: acceptedFiles => {\n      if (acceptedFiles.length === 1) {\n        var fileType = acceptedFiles[0].path.split('.').slice(-1)[0];\n\n        if (isJson(fileType)) {\n          props.setFiles(acceptedFiles);\n        } else {\n          props.setFiles([...props.files, ...acceptedFiles]);\n        }\n      } else {\n        try {\n          for (var i = 0; i < acceptedFiles.length; i++) {\n            var fileType = acceptedFiles[i].path.split('.').slice(-1)[0];\n\n            if (isJson(fileType)) {\n              alert(\"Only 1 .json file is accepted!\");\n              throw TypeError;\n            }\n          } //check for json in history\n\n\n          var history = props.files;\n\n          if (checkHistoryForJson(history)) {\n            alert(\"Only 1 .json file is accepted!\");\n          } else {\n            props.setFiles([...props.files, ...acceptedFiles]);\n          }\n        } catch (TypeError) {\n          console.log(\"incorrect input\");\n        }\n      }\n    },\n    accept: \"application/pdf,text/plain,application/json,.csv,application/vnd.ms-excel\",\n    children: _ref => {\n      let {\n        getRootProps,\n        getInputProps,\n        isDragAccept,\n        isDragActive,\n        isDragReject\n      } = _ref;\n      const acceptClass = isDragAccept ? 'acceptStyle' : '';\n      const rejectClass = isDragReject ? 'rejectStyle' : '';\n      const activeClass = isDragActive ? 'activeStyle' : '';\n      return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n          className: `dropzone ${acceptClass} ${rejectClass} ${activeClass}`\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"logo-image\",\n          className: \"logo-image\",\n          src: require('../../../../images/logo.png'),\n          alt: \"Sentir logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), isDragAccept && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"All files will be accepted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 30\n        }, this), isDragReject && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Some files will be rejected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 30\n        }, this), !isDragActive && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Drop some files here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footnote-text\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".json, .pdf, .csv and .txt files accepted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DropzoneContainer;\nexport default DropzoneContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropzoneContainer\");","map":{"version":3,"names":["React","Dropzone","DropzoneContainer","props","isJson","fileType","checkHistoryForJson","history","i","length","path","split","slice","acceptedFiles","setFiles","files","alert","TypeError","console","log","getRootProps","getInputProps","isDragAccept","isDragActive","isDragReject","acceptClass","rejectClass","activeClass","className","require"],"sources":["C:/1.Regine/PDA-APP/frontend/src/AnalysisPage/components/dropbox/dropbox.js"],"sourcesContent":["import React from 'react';\r\nimport './dropbox.css';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nconst DropzoneContainer = (props) => {\r\n\r\n  // Checks whether the file passed in is a json\r\n  const isJson = (fileType) => {\r\n    if (fileType === 'json') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Check whether a json file has been uploaded previously. \r\n  // This is for consequtive uploads before pressing process\r\n  const checkHistoryForJson = (history) => {\r\n    for (var i = 0; i < history.length; i++) {\r\n      var fileType = history[i].path.split('.').slice(-1)[0]\r\n      if (isJson(fileType)) {\r\n        return true;\r\n      } else {\r\n        return false; \r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dropzone\r\n      onDrop={(acceptedFiles) =>{\r\n        if (acceptedFiles.length===1){\r\n          var fileType = acceptedFiles[0].path.split('.').slice(-1)[0];\r\n          if (isJson(fileType)) { \r\n            props.setFiles(acceptedFiles);\r\n          } else {\r\n            props.setFiles([...props.files, ...acceptedFiles]);\r\n          }\r\n        } else {\r\n          try{\r\n            for (var i=0; i<acceptedFiles.length; i++){\r\n              var fileType = acceptedFiles[i].path.split('.').slice(-1)[0];      \r\n              if (isJson(fileType)) {\r\n                alert(\"Only 1 .json file is accepted!\")\r\n                throw TypeError;\r\n              }\r\n            }\r\n            //check for json in history\r\n            var history = props.files\r\n            if (checkHistoryForJson(history)) {\r\n              alert(\"Only 1 .json file is accepted!\")\r\n            } else {\r\n              props.setFiles([...props.files, ...acceptedFiles]);\r\n            }\r\n          } \r\n          catch(TypeError) {\r\n            console.log(\"incorrect input\")\r\n          }\r\n        }\r\n        \r\n      }\r\n    }\r\n    accept=\"application/pdf,text/plain,application/json,.csv,application/vnd.ms-excel\"\r\n\r\n    >\r\n      {({\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragAccept,\r\n        isDragActive,\r\n        isDragReject,\r\n      }) => {\r\n        const acceptClass = isDragAccept ? 'acceptStyle' : '';\r\n        const rejectClass = isDragReject ? 'rejectStyle' : '';\r\n        const activeClass = isDragActive ? 'activeStyle' : '';\r\n        return (\r\n          <div\r\n            {...getRootProps({\r\n              className: `dropzone ${acceptClass} ${rejectClass} ${activeClass}`,\r\n            })}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <img\r\n              id='logo-image'\r\n              className='logo-image'\r\n              src={require('../../../../images/logo.png')}\r\n              alt=\"Sentir logo\"\r\n            />\r\n            {isDragAccept && <span>All files will be accepted</span>}\r\n            {isDragReject && <span>Some files will be rejected</span>}\r\n            {!isDragActive && <span>Drop some files here!</span>}\r\n            <div className=\"footnote-text\">\r\n              <span>.json, .pdf, .csv and .txt files accepted</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Dropzone>\r\n  );\r\n};\r\n\r\nexport default DropzoneContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}