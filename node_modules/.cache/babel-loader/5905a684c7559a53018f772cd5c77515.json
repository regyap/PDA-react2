{"ast":null,"code":"var _jsxFileName = \"C:\\\\1.Regine\\\\PDA-APP\\\\frontend\\\\src\\\\AnalysisPage\\\\components\\\\Upload\\\\UploadUsingDropzone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './uploaddropzone.css';\nimport { Row, Col } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport { TiDeleteOutline } from 'react-icons/ti';\nimport DropzoneContainer from '../dropbox/DropzoneContainer';\nimport Options from './Options';\nimport { css, ThemeProvider } from 'styled-components';\nimport { base, DocumentPdf, DocumentTxt } from 'grommet-icons';\nimport { deepMerge } from 'grommet-icons/utils';\nimport { useState } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customColorTheme = deepMerge(base, {\n  global: {\n    colors: {\n      icons: '#333333'\n    }\n  },\n  icon: {\n    extend: css`\n      ${props => props.color === 'brand' && `\n        fill: #64FFDA;\n        stroke: #64FFDA;\n      `}\n    `\n  }\n});\n\nconst UploadUsingDropzone = props => {\n  _s();\n\n  const {\n    files,\n    setFiles,\n    uploadFiles,\n    deleteFile,\n    setConfig,\n    config\n  } = props; // for the modal \n\n  const [show, setShow] = useState(false); // const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n\n  const handleShow = () => {};\n\n  const handleClose = () => {}; // check file type\n\n\n  const isJson = fileType => {\n    if (fileType == 'json') {\n      return true;\n    } else {\n      return false;\n    }\n  }; // for process button \n\n\n  const handleClick = file => {\n    if (file.length === 1) {\n      var fileType = file[0].path.split('.').slice(-1)[0];\n\n      if (isJson(fileType)) {\n        uploadFiles();\n      } else {\n        handleShow();\n      }\n    } else {\n      handleShow();\n    } // console.log(file)\n\n  }; // for button style\n\n\n  const useStyles = makeStyles(theme => ({\n    outlined: {\n      color: 'rgb(3, 155, 144)',\n      border: '1px solid',\n      margin: '8px',\n      \"&:hover\": {\n        color: '#b1fdf8'\n      }\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"upload-row\",\n    lg: 2,\n    md: 2,\n    sm: 1,\n    xs: 1,\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      className: \"upload-column\",\n      lg: 5,\n      md: 5,\n      sm: 12,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\" // onClick={() => handleClick(files)}\n          // className={classes.outlined}\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"PROCESS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      className: \"upload-column\",\n      lg: 7,\n      md: 7,\n      sm: 12,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files\",\n        children: /*#__PURE__*/_jsxDEV(Divider, {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadUsingDropzone, \"R47E7VoaPnD/G+LjghbvWusui9M=\", true);\n\n_c = UploadUsingDropzone;\nexport default UploadUsingDropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadUsingDropzone\");","map":{"version":3,"names":["React","Row","Col","Button","makeStyles","Divider","TiDeleteOutline","DropzoneContainer","Options","css","ThemeProvider","base","DocumentPdf","DocumentTxt","deepMerge","useState","Modal","customColorTheme","global","colors","icons","icon","extend","props","color","UploadUsingDropzone","files","setFiles","uploadFiles","deleteFile","setConfig","config","show","setShow","handleShow","handleClose","isJson","fileType","handleClick","file","length","path","split","slice","useStyles","theme","outlined","border","margin","classes"],"sources":["C:/1.Regine/PDA-APP/frontend/src/AnalysisPage/components/Upload/UploadUsingDropzone.js"],"sourcesContent":["import React from 'react';\r\nimport './uploaddropzone.css';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { TiDeleteOutline } from 'react-icons/ti';\r\nimport DropzoneContainer from '../dropbox/DropzoneContainer';\r\nimport Options from './Options';\r\nimport { css, ThemeProvider } from 'styled-components';\r\nimport { base, DocumentPdf, DocumentTxt } from 'grommet-icons';\r\nimport { deepMerge } from 'grommet-icons/utils';\r\nimport { useState } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\n\r\nconst customColorTheme = deepMerge(base, {\r\n  global: {\r\n    colors: {\r\n      icons: '#333333',\r\n    },\r\n  },\r\n  icon: {\r\n    extend: css`\r\n      ${(props) =>\r\n        props.color === 'brand' &&\r\n        `\r\n        fill: #64FFDA;\r\n        stroke: #64FFDA;\r\n      `}\r\n    `,\r\n  },\r\n});\r\n\r\nconst UploadUsingDropzone = (props) => {\r\n  const { files, setFiles, uploadFiles, deleteFile, setConfig, config } = props;\r\n\r\n  // for the modal \r\n  const [show, setShow] = useState(false);\r\n\r\n  // const handleClose = () => setShow(false);\r\n  // const handleShow = () => setShow(true);\r\n\r\n  const handleShow = () => {\r\n\r\n  }\r\n\r\n  const handleClose = () => {\r\n    \r\n  }\r\n\r\n  // check file type\r\n  \r\n  const isJson = (fileType) => {\r\n    if (fileType == 'json') {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // for process button \r\n  const handleClick = (file) => {\r\n    if (file.length===1){\r\n      var fileType = file[0].path.split('.').slice(-1)[0];\r\n      if (isJson(fileType)) {\r\n        uploadFiles();\r\n      } else {\r\n        handleShow();\r\n      }\r\n    } else {\r\n      handleShow();\r\n    }\r\n    // console.log(file)\r\n  }  \r\n\r\n  // for button style\r\n  const useStyles = makeStyles(theme => ({\r\n    outlined: {\r\n      color: 'rgb(3, 155, 144)',\r\n      border: '1px solid',\r\n      margin: '8px',\r\n      \"&:hover\": {\r\n        color: '#b1fdf8'\r\n      }\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Row className=\"upload-row\" lg={2} md={2} sm={1} xs={1}>\r\n      <Col className=\"upload-column\" lg={5} md={5} sm={12} xs={12}>\r\n        {/* <DropzoneContainer files={files} setFiles={setFiles} /> */}\r\n\r\n        <div className=\"upload-button\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            // onClick={() => handleClick(files)}\r\n            // className={classes.outlined}\r\n          >\r\n            <span>PROCESS</span>\r\n          </Button>\r\n        </div>\r\n        {/* <Modal\r\n          show={show}\r\n          onHide={handleClose}\r\n          backdrop=\"static\"\r\n          // keyboard={false}\r\n          >\r\n          \r\n          <Modal.Header closeButton>\r\n            <Modal.Title>What would you like to analyse?</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n             Import option form here \r\n            <Options setConfig={setConfig} uploadFiles={uploadFiles}/>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>CLOSE</Button>\r\n            <Button variant=\"primary\" onClick={uploadFiles}>SUBMIT</Button>\r\n          </Modal.Footer>\r\n        </Modal> */}\r\n      </Col>\r\n\r\n      <Col className=\"upload-column\" lg={7} md={7} sm={12} xs={12}>\r\n        <div className=\"uploaded-files\">\r\n          {/* <div className=\"uploaded-files-header\">\r\n            <h4>Uploaded Files</h4>\r\n            <div className=\"uploaded-files-subheader\">\r\n              <span>{files.length} Files</span>\r\n              <span>\r\n                {(\r\n                  files.reduce((acc, e) => acc + e.size, 0.0) / 1000000\r\n                ).toFixed(2)}{' '}\r\n                MB\r\n              </span>\r\n            </div>\r\n          </div> */}\r\n          <Divider className=\"divider\" />\r\n\r\n\r\n          {\r\n          // files.map((file, index) => {\r\n          //   return (\r\n          //     <div className=\"uploaded-file-container\" key={index}>\r\n          //       <div className=\"uploaded-file\">\r\n          //         <ThemeProvider theme={customColorTheme}>\r\n          //           {/* {file.name.substring(\r\n          //             file.name.lastIndexOf('.') + 1,\r\n          //             file.name.length\r\n          //           ) === 'pdf' ? (\r\n          //             <DocumentPdf color=\"brand\" />\r\n          //           ) : (\r\n          //             <DocumentTxt color=\"brand\" />\r\n          //           )} */}\r\n          //         </ThemeProvider>\r\n          //         <div className=\"uploaded-file-details\">\r\n          //           <span>File Name: {file.name}</span>\r\n          //           <span>File Size: {(file.size / 1000000).toFixed(2)}MB</span>\r\n          //         </div>\r\n          //       </div>\r\n          //       <div className=\"delete-uploaded-file\">\r\n          //         <TiDeleteOutline\r\n          //           size={30}\r\n          //           color=\"red\"\r\n          //           // onClick={() => deleteFile(index)}\r\n          //         />\r\n          //       </div>\r\n          //     </div>\r\n          //   );\r\n          // })\r\n          }\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default UploadUsingDropzone;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}