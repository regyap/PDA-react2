{"ast":null,"code":"var _jsxFileName = \"C:\\\\1.Regine\\\\PDA-APP\\\\frontend\\\\src\\\\index.js\";\n// import 'react-app-polyfill/ie11';\n// import 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'; // import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css'; // import * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport Upload from './components/Upload/Upload';\nimport About from './components/FrontPage/About';\nimport Home from './components/FrontPage/Home';\nimport Preview from './components/FrontPage/SaveAndPreview';\nimport DataSource from './components/FrontPage/DataSource'; // import { createStore, applyMiddleware } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import createSagaMiddleware from 'redux-saga';\n// import { Provider } from 'react-redux';\n// import reducers from './reducers';\n// import rootSaga from './sagas';\n// create the saga middleware\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sagaMiddleware = createSagaMiddleware(); // mount it on the Store\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(rootSaga);\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Upload\",\n        component: Upload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n        from: \"/\",\n        to: \"/home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\nmodule.hot.accept();","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Route","Switch","Redirect","App","Upload","About","Home","Preview","DataSource","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","composeWithDevTools","applyMiddleware","run","rootSaga","render","document","getElementById","serviceWorker","unregister","module","hot","accept"],"sources":["C:/1.Regine/PDA-APP/frontend/src/index.js"],"sourcesContent":["// import 'react-app-polyfill/ie11';\n// import 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n// import * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nimport Upload from './components/Upload/Upload';\nimport About from './components/FrontPage/About';\nimport Home from './components/FrontPage/Home';\nimport Preview from './components/FrontPage/SaveAndPreview';\nimport DataSource from './components/FrontPage/DataSource'\n\n// import { createStore, applyMiddleware } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import createSagaMiddleware from 'redux-saga';\n// import { Provider } from 'react-redux';\n\n// import reducers from './reducers';\n// import rootSaga from './sagas';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n// mount it on the Store\nconst store = createStore(\n  reducers,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Switch>\n        {/* <Route path=\"/dashboard\">\n          <App />\n        </Route> */}\n        <Route path=\"/Upload\" component={Upload} />\n        {/* <Route path=\"/about\" component={About} />\n        <Route path=\"/upload\" component={Upload} />\n        <Route path=\"/preview\" component={Preview} />\n        <Route path=\"/datasource\" component={DataSource} /> */}\n        {/* <PrivateRoute path=\"/test\" component={testLogin} /> */}\n\n        <Redirect from=\"/\" to=\"/home\" />\n      </Switch>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nmodule.hot.accept();\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD,C,CAEA;;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,OAAOC,UAAP,MAAuB,mCAAvB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AACA,MAAMC,cAAc,GAAGC,oBAAoB,EAA3C,C,CACA;;AACA,MAAMC,KAAK,GAAGC,WAAW,CACvBC,QADuB,EAEvBC,mBAAmB,CAACC,eAAe,CAACN,cAAD,CAAhB,CAFI,CAAzB;AAKAA,cAAc,CAACO,GAAf,CAAmBC,QAAnB;AAGAnB,QAAQ,CAACoB,MAAT,eACE,QAAC,QAAD;EAAU,KAAK,EAAEP,KAAjB;EAAA,uBACE,QAAC,aAAD;IAAA,uBACE,QAAC,MAAD;MAAA,wBAIE,QAAC,KAAD;QAAO,IAAI,EAAC,SAAZ;QAAsB,SAAS,EAAEP;MAAjC;QAAA;QAAA;QAAA;MAAA,QAJF,eAWE,QAAC,QAAD;QAAU,IAAI,EAAC,GAAf;QAAmB,EAAE,EAAC;MAAtB;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF,EAkBEe,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAlBF,E,CAqBA;AACA;AACA;;AACAC,aAAa,CAACC,UAAd;AAEAC,MAAM,CAACC,GAAP,CAAWC,MAAX"},"metadata":{},"sourceType":"module"}