{"ast":null,"code":"var _jsxFileName = \"C:\\\\1.Regine\\\\PDA-APP\\\\frontend\\\\src\\\\AnalysisPage\\\\components\\\\Upload\\\\Upload.js\",\n    _s = $RefreshSig$();\n\n// import Form from 'react-bootstrap/Form';\n// import Tabs from 'react-bootstrap/Tabs';\n// import Tab from 'react-bootstrap/Tab';\n// import Sonnet from 'react-bootstrap/Tab';\nimport React, { useState, useEffect } from 'react';\nimport './Upload.css'; // #all the actions in the front end must be used to connect to the backend // form > function > jsonify > post to api\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upload() {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [textinput, settextinput] = useState(\"\");\n  const [CheckedBox1, setCheckedBox1] = useState(false);\n  const [CheckedBox2, setCheckedBox2] = useState(false);\n  const [Message, setMessage] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  let handleSubmit = async e => {\n    e.preventDefault();\n    const data = {};\n    data[\"form\"] = {\n      \"title\": title,\n      \"textinput\": textinput,\n      \"CheckedBox1\": CheckedBox1,\n      \"CheckedBox2\": CheckedBox2,\n      \"Message\": Message,\n      \"output\": output\n    };\n    console.log(data);\n\n    try {\n      let res = await fetch(\"http://127.0.0.1:5000/app/upload\", {\n        method: \"POST\",\n        body: JSON.stringify(data)\n      });\n      let resJson = await res.json();\n      let resout_ = await res.json;\n\n      if (res.status === 200) {\n        setTitle(\"\");\n        settextinput(\"\");\n        setMessage(\"Crawled successfully\"); // setOutput()\n\n        if (resout_.success) {\n          setOutput(res.result[0].summary_text);\n        }\n\n        console.log(resJson);\n      } else {\n        setMessage(\"Some error occured\"); // setOutput(\"Error occured while obtaining sentence, please try again later\");\n\n        console.log(\"error\");\n      }\n\n      let out = await fetch;\n      let resout = await out.json; // console.log(res.result[0].summary_text);\n\n      if (resout === 200) {\n        console.log(\"Into IF statement\");\n        setOutput(res.result[0].summary_text);\n      } else {\n        setOutput(\"Error occurred while obtaining sentence, please try again later\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }; // const Upload = () => {\n  // const [key, setKey] = useState('home');\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"message\",\n        value: textinput,\n        onChange: e => settextinput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"vehicle1\",\n        value: \"vehicle1\",\n        onClick: () => {\n          setCheckedBox1(!CheckedBox1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"vehicle1\",\n        children: \" Option1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"vehicle2\",\n        value: \"vehicle2\",\n        onClick: () => {\n          setCheckedBox2(!CheckedBox2);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"vehicle2\",\n        children: \" Option2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      value: Message,\n      children: Message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Upload, \"9OSiFiC5d3qLTSsoccSYyfO9tRw=\");\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useEffect","Upload","title","setTitle","textinput","settextinput","CheckedBox1","setCheckedBox1","CheckedBox2","setCheckedBox2","Message","setMessage","output","setOutput","handleSubmit","e","preventDefault","data","console","log","res","fetch","method","body","JSON","stringify","resJson","json","resout_","status","success","result","summary_text","out","resout","err","target","value"],"sources":["C:/1.Regine/PDA-APP/frontend/src/AnalysisPage/components/Upload/Upload.js"],"sourcesContent":["// import Form from 'react-bootstrap/Form';\r\n// import Tabs from 'react-bootstrap/Tabs';\r\n// import Tab from 'react-bootstrap/Tab';\r\n// import Sonnet from 'react-bootstrap/Tab';\r\nimport React, {useState,useEffect} from 'react';\r\nimport './Upload.css';\r\n\r\n// #all the actions in the front end must be used to connect to the backend // form > function > jsonify > post to api\r\n\r\nfunction Upload() {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [textinput, settextinput] = useState(\"\");\r\n    const [CheckedBox1, setCheckedBox1] = useState(false);\r\n    const [CheckedBox2, setCheckedBox2] = useState(false);\r\n    const [Message, setMessage] = useState(\"\");\r\n    const [output, setOutput] = useState(\"\");\r\n\r\n    \r\n\r\n  let handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const data = {}\r\n    data[\"form\"] = {\r\n        \"title\": title,\r\n        \"textinput\": textinput,\r\n        \"CheckedBox1\": CheckedBox1,\r\n        \"CheckedBox2\": CheckedBox2,\r\n        \"Message\":Message,\r\n        \"output\":output,\r\n     \r\n    }\r\n    console.log(data)\r\n    try{\r\n  let res = await fetch(\"http://127.0.0.1:5000/app/upload\",{\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n  });\r\n  let resJson =  await res.json();\r\n  let resout_ = await res.json;\r\n\r\n  \r\n\r\n\r\n  if(res.status === 200 ){\r\n    setTitle(\"\");\r\n    settextinput(\"\");\r\n    setMessage(\"Crawled successfully\");\r\n    // setOutput()\r\n    if(resout_.success){\r\n      setOutput(res.result[0].summary_text);\r\n    }\r\n    \r\n    console.log(resJson);\r\n  }\r\n  else{\r\n    setMessage(\"Some error occured\");\r\n    // setOutput(\"Error occured while obtaining sentence, please try again later\");\r\n    console.log(\"error\")\r\n  }\r\n\r\n  let out = await fetch;\r\n  let resout = await out.json;\r\n  // console.log(res.result[0].summary_text);\r\n  if (resout===200){\r\n    console.log(\"Into IF statement\");\r\n    setOutput(res.result[0].summary_text);\r\n  }\r\n  else{\r\n    setOutput(\"Error occurred while obtaining sentence, please try again later\");\r\n  }\r\n  \r\n    }\r\ncatch(err){\r\n    console.log(err);\r\n  }\r\n}\r\n\r\n// const Upload = () => {\r\n    // const [key, setKey] = useState('home');\r\n  return(\r\n\r\n         <form onSubmit={handleSubmit}>\r\n        <div>\r\n        <input type = \"text\" value={title} onChange={(e)=>setTitle(e.target.value)} required autoFocus/>\r\n        <label>Title </label>\r\n        </div>\r\n        <div>\r\n        <textarea name=\"message\" value ={textinput} onChange={(e)=>settextinput(e.target.value)}></textarea>\r\n            <label>Text </label>\r\n        </div>\r\n        <div>\r\n        <input type=\"checkbox\" id=\"vehicle1\" value=\"vehicle1\" onClick={()=>{\r\n            setCheckedBox1(!CheckedBox1)\r\n        }} />\r\n        <label for=\"vehicle1\"> Option1</label>\r\n    </div>\r\n    <div>\r\n<input type=\"checkbox\" id=\"vehicle2\" value=\"vehicle2\" onClick={()=>{\r\n    setCheckedBox2(!CheckedBox2)\r\n}} />\r\n<label for=\"vehicle2\"> Option2</label>\r\n</div>\r\n      \r\n      \r\n        <input type=\"submit\" value=\"Submit\"/>\r\n     <div value={Message}>{Message}</div>\r\n     <div>{output}</div>\r\n        </form>\r\n        \r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  export default Upload;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}