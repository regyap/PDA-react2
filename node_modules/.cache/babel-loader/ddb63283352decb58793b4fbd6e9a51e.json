{"ast":null,"code":"var _jsxFileName = \"C:\\\\1.Regine\\\\PDA-APP\\\\frontend\\\\src\\\\test\\\\containers\\\\UploadForm.js\";\nimport React, { Component } from \"react\";\nimport { Form, Field, reduxForm } from \"redux-form\";\nimport DropZoneField from \"../components/dropzoneField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst imageIsRequired = value => !value ? \"Required\" : undefined;\n\nclass UploadImageForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      imageFile: []\n    };\n\n    this.handleFormSubmit = formProps => {\n      const fd = new FormData();\n      fd.append(\"imageFile\", formProps.imageToUpload[0]);\n      alert(JSON.stringify(formProps, null, 4)); // append any additional Redux form fields\n      // create an AJAX request here with the created formData\n    };\n\n    this.handleOnDrop = newImageFile => this.setState({\n      imageFile: newImageFile\n    });\n\n    this.resetForm = () => this.setState({\n      imageFile: []\n    }, () => this.props.reset());\n\n    this.render = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Upload An Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.props.handleSubmit(this.handleFormSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"imageToUpload\",\n          component: DropZoneField,\n          type: \"file\",\n          imagefile: this.state.imageFile,\n          handleOnDrop: this.handleOnDrop,\n          validate: [imageIsRequired]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"uk-button uk-button-primary uk-button-large\",\n          disabled: this.props.submitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"uk-button uk-button-default uk-button-large\",\n          disabled: this.props.pristine || this.props.submitting,\n          onClick: this.resetForm,\n          style: {\n            float: \"right\"\n          },\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default reduxForm({\n  form: \"UploadImageForm\"\n})(UploadImageForm);","map":{"version":3,"names":["React","Component","Form","Field","reduxForm","DropZoneField","imageIsRequired","value","undefined","UploadImageForm","state","imageFile","handleFormSubmit","formProps","fd","FormData","append","imageToUpload","alert","JSON","stringify","handleOnDrop","newImageFile","setState","resetForm","props","reset","render","handleSubmit","submitting","pristine","float","form"],"sources":["C:/1.Regine/PDA-APP/frontend/src/test/containers/UploadForm.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Field, reduxForm } from \"redux-form\";\r\nimport DropZoneField from \"../components/dropzoneField\";\r\n\r\nconst imageIsRequired = value => (!value ? \"Required\" : undefined);\r\n\r\nclass UploadImageForm extends Component {\r\n  state = { imageFile: [] };\r\n\r\n  handleFormSubmit = formProps => {\r\n    const fd = new FormData();\r\n    fd.append(\"imageFile\", formProps.imageToUpload[0]);\r\n    alert(JSON.stringify(formProps, null, 4));\r\n    // append any additional Redux form fields\r\n    // create an AJAX request here with the created formData\r\n  };\r\n\r\n  handleOnDrop = newImageFile => this.setState({ imageFile: newImageFile });\r\n\r\n  resetForm = () => this.setState({ imageFile: [] }, () => this.props.reset());\r\n\r\n  render = () => (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"title\">Upload An Image</h1>\r\n      <hr />\r\n      <Form onSubmit={this.props.handleSubmit(this.handleFormSubmit)}>\r\n        <Field\r\n          name=\"imageToUpload\"\r\n          component={DropZoneField}\r\n          type=\"file\"\r\n          imagefile={this.state.imageFile}\r\n          handleOnDrop={this.handleOnDrop}\r\n          validate={[imageIsRequired]}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"uk-button uk-button-primary uk-button-large\"\r\n          disabled={this.props.submitting}\r\n        >\r\n          Submit\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"uk-button uk-button-default uk-button-large\"\r\n          disabled={this.props.pristine || this.props.submitting}\r\n          onClick={this.resetForm}\r\n          style={{ float: \"right\" }}\r\n        >\r\n          Clear\r\n        </button>\r\n      </Form>\r\n      <div className=\"clear\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default reduxForm({ form: \"UploadImageForm\" })(UploadImageForm);\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,QAAuC,YAAvC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAK,CAACA,KAAD,GAAS,UAAT,GAAsBC,SAAxD;;AAEA,MAAMC,eAAN,SAA8BR,SAA9B,CAAwC;EAAA;IAAA;IAAA,KACtCS,KADsC,GAC9B;MAAEC,SAAS,EAAE;IAAb,CAD8B;;IAAA,KAGtCC,gBAHsC,GAGnBC,SAAS,IAAI;MAC9B,MAAMC,EAAE,GAAG,IAAIC,QAAJ,EAAX;MACAD,EAAE,CAACE,MAAH,CAAU,WAAV,EAAuBH,SAAS,CAACI,aAAV,CAAwB,CAAxB,CAAvB;MACAC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CAAD,CAAL,CAH8B,CAI9B;MACA;IACD,CATqC;;IAAA,KAWtCQ,YAXsC,GAWvBC,YAAY,IAAI,KAAKC,QAAL,CAAc;MAAEZ,SAAS,EAAEW;IAAb,CAAd,CAXO;;IAAA,KAatCE,SAbsC,GAa1B,MAAM,KAAKD,QAAL,CAAc;MAAEZ,SAAS,EAAE;IAAb,CAAd,EAAiC,MAAM,KAAKc,KAAL,CAAWC,KAAX,EAAvC,CAboB;;IAAA,KAetCC,MAfsC,GAe7B,mBACP;MAAK,SAAS,EAAC,eAAf;MAAA,wBACE;QAAI,SAAS,EAAC,OAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,IAAD;QAAM,QAAQ,EAAE,KAAKF,KAAL,CAAWG,YAAX,CAAwB,KAAKhB,gBAA7B,CAAhB;QAAA,wBACE,QAAC,KAAD;UACE,IAAI,EAAC,eADP;UAEE,SAAS,EAAEP,aAFb;UAGE,IAAI,EAAC,MAHP;UAIE,SAAS,EAAE,KAAKK,KAAL,CAAWC,SAJxB;UAKE,YAAY,EAAE,KAAKU,YALrB;UAME,QAAQ,EAAE,CAACf,eAAD;QANZ;UAAA;UAAA;UAAA;QAAA,QADF,eASE;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAC,6CAFZ;UAGE,QAAQ,EAAE,KAAKmB,KAAL,CAAWI,UAHvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QATF,eAgBE;UACE,IAAI,EAAC,QADP;UAEE,SAAS,EAAC,6CAFZ;UAGE,QAAQ,EAAE,KAAKJ,KAAL,CAAWK,QAAX,IAAuB,KAAKL,KAAL,CAAWI,UAH9C;UAIE,OAAO,EAAE,KAAKL,SAJhB;UAKE,KAAK,EAAE;YAAEO,KAAK,EAAE;UAAT,CALT;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAhBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eA6BE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QA7BF;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBoC;EAAA;;AAAA;;AAkDxC,eAAe3B,SAAS,CAAC;EAAE4B,IAAI,EAAE;AAAR,CAAD,CAAT,CAAuCvB,eAAvC,CAAf"},"metadata":{},"sourceType":"module"}