{"ast":null,"code":"var _jsxFileName = \"C:\\\\1.Regine\\\\PDA-APP\\\\frontend\\\\src\\\\AnalysisPage\\\\components\\\\dropbox\\\\DropzoneContainer.js\";\nimport React from 'react';\nimport './Dropzone.css';\nimport Dropzone from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropzoneContainer = props => {\n  // Checks whether the file passed in is a json\n  const isJson = fileType => {\n    if (fileType == 'json') {\n      return true;\n    } else {\n      return false;\n    }\n  }; // Check whether a json file has been uploaded previously. \n  // This is for consequtive uploads before pressing process\n\n\n  const checkHistoryForJson = history => {\n    for (var i = 0; i < history.length; i++) {\n      var fileType = history[i].path.split('.').slice(-1)[0];\n\n      if (isJson(fileType)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <h1>fef</h1>\n    _jsxDEV(Dropzone, {\n      onDrop: acceptedFiles => {\n        if (acceptedFiles.length === 1) {\n          var fileType = acceptedFiles[0].path.split('.').slice(-1)[0];\n\n          if (isJson(fileType)) {\n            props.setFiles(acceptedFiles);\n          } else {\n            props.setFiles([...props.files, ...acceptedFiles]);\n          }\n        } else {\n          try {\n            for (var i = 0; i < acceptedFiles.length; i++) {\n              var fileType = acceptedFiles[i].path.split('.').slice(-1)[0];\n\n              if (isJson(fileType)) {\n                alert(\"Only 1 .json file is accepted!\");\n                throw TypeError;\n              }\n            } //check for json in history\n\n\n            var history = props.files;\n\n            if (checkHistoryForJson(history)) {\n              alert(\"Only 1 .json file is accepted!\");\n            } else {\n              props.setFiles([...props.files, ...acceptedFiles]);\n            }\n          } catch (TypeError) {\n            console.log(\"incorrect input\");\n          }\n        }\n      },\n      accept: \"application/pdf,text/plain,application/json,.csv,application/vnd.ms-excel\",\n      children: _ref => {\n        let {\n          getRootProps,\n          getInputProps,\n          isDragAccept,\n          isDragActive,\n          isDragReject\n        } = _ref;\n        const acceptClass = isDragAccept ? 'acceptStyle' : '';\n        const rejectClass = isDragReject ? 'rejectStyle' : '';\n        const activeClass = isDragActive ? 'activeStyle' : '';\n        return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n            className: `dropzone ${acceptClass} ${rejectClass} ${activeClass}`\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"logo-image\",\n            className: \"logo-image\",\n            src: require('../../../images/logo.png'),\n            alt: \"Sentir logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), isDragAccept && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"All files will be accepted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 30\n          }, this), isDragReject && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Some files will be rejected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 30\n          }, this), !isDragActive && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Drop some files here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"footnote-text\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \".json, .pdf, .csv and .txt files accepted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = DropzoneContainer;\nexport default DropzoneContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropzoneContainer\");","map":{"version":3,"names":["React","Dropzone","DropzoneContainer","props","isJson","fileType","checkHistoryForJson","history","i","length","path","split","slice","acceptedFiles","setFiles","files","alert","TypeError","console","log","getRootProps","getInputProps","isDragAccept","isDragActive","isDragReject","acceptClass","rejectClass","activeClass","className","require"],"sources":["C:/1.Regine/PDA-APP/frontend/src/AnalysisPage/components/dropbox/DropzoneContainer.js"],"sourcesContent":["import React from 'react';\r\nimport './Dropzone.css';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nconst DropzoneContainer = (props) => {\r\n // Checks whether the file passed in is a json\r\n const isJson = (fileType) => {\r\n  if (fileType == 'json') {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n// Check whether a json file has been uploaded previously. \r\n// This is for consequtive uploads before pressing process\r\nconst checkHistoryForJson = (history) => {\r\n  for (var i = 0; i < history.length; i++) {\r\n    var fileType = history[i].path.split('.').slice(-1)[0]\r\n    if (isJson(fileType)) {\r\n      return true;\r\n    } else {\r\n      return false; \r\n    }\r\n  }\r\n}\r\n\r\n  \r\n\r\n  return (\r\n    \r\n\r\n    // <h1>fef</h1>\r\n    <Dropzone\r\n      onDrop={(acceptedFiles) =>{\r\n        if (acceptedFiles.length===1){\r\n          var fileType = acceptedFiles[0].path.split('.').slice(-1)[0];\r\n          if (isJson(fileType)) { \r\n            props.setFiles(acceptedFiles);\r\n          } else {\r\n            props.setFiles([...props.files, ...acceptedFiles]);\r\n          }\r\n        } else {\r\n          try{\r\n            for (var i=0; i<acceptedFiles.length; i++){\r\n              var fileType = acceptedFiles[i].path.split('.').slice(-1)[0];      \r\n              if (isJson(fileType)) {\r\n                alert(\"Only 1 .json file is accepted!\")\r\n                throw TypeError;\r\n              }\r\n            }\r\n            //check for json in history\r\n            var history = props.files\r\n            if (checkHistoryForJson(history)) {\r\n              alert(\"Only 1 .json file is accepted!\")\r\n            } else {\r\n              props.setFiles([...props.files, ...acceptedFiles]);\r\n            }\r\n          } \r\n          catch(TypeError) {\r\n            console.log(\"incorrect input\")\r\n          }\r\n        }\r\n        \r\n      }\r\n    }\r\n    accept=\"application/pdf,text/plain,application/json,.csv,application/vnd.ms-excel\"\r\n\r\n    >\r\n      {({\r\n        getRootProps,\r\n        getInputProps,\r\n        isDragAccept,\r\n        isDragActive,\r\n        isDragReject,\r\n      }) => {\r\n        const acceptClass = isDragAccept ? 'acceptStyle' : '';\r\n        const rejectClass = isDragReject ? 'rejectStyle' : '';\r\n        const activeClass = isDragActive ? 'activeStyle' : '';\r\n        return (\r\n          <div\r\n            {...getRootProps({\r\n              className: `dropzone ${acceptClass} ${rejectClass} ${activeClass}`,\r\n            })}\r\n          >\r\n            <input {...getInputProps()} />\r\n            <img\r\n              id='logo-image'\r\n              className='logo-image'\r\n              src={require('../../../images/logo.png')}\r\n              alt=\"Sentir logo\"\r\n            />\r\n            {isDragAccept && <span>All files will be accepted</span>}\r\n            {isDragReject && <span>Some files will be rejected</span>}\r\n            {!isDragActive && <span>Drop some files here!</span>}\r\n            <div className=\"footnote-text\">\r\n              <span>.json, .pdf, .csv and .txt files accepted</span>\r\n            </div>\r\n          </div>\r\n        );\r\n      }}\r\n    </Dropzone>\r\n  );\r\n};\r\n\r\nexport default DropzoneContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}