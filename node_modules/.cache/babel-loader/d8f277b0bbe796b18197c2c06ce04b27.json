{"ast":null,"code":"var _jsxFileName = \"C:\\\\1.Regine\\\\PDA-APP\\\\frontend\\\\src\\\\AnalysisPage\\\\components\\\\Upload\\\\Options.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n/* Import Components */\n\nimport CheckBox from \"./FormElements/Checkbox\";\nimport Select from \"./FormElements/Select\";\nimport Button from \"./FormElements/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Options = props => {\n  _s();\n\n  const {\n    setConfig,\n    uploadFiles,\n    config,\n    files\n  } = props;\n  const [data, setData] = useState({\n    platform: \"Dark Web\",\n    visualisations: [\"Fake News\", \"Stance Detection\", \"Summary\", \"Word Cloud\", \"Topic Modelling\", \"NER and Relation\"]\n  });\n  const platformOptions = [\"Dark Web\", \"Twitter\", \"Facebook\", \"HardWareZone\", \"Reddit\"];\n  const visualisationOptions = [\"Fake News\", \"Stance Detection\", \"Summary\", \"Word Cloud\", \"Topic Modelling\", \"NER and Relation\"];\n\n  const handleInput = e => {\n    let value = e.target.value;\n    const visualisationData = data.visualisations;\n    setData({\n      platform: value,\n      visualisations: visualisationData\n    });\n  };\n\n  const handleCheckBox = e => {\n    //new selection is the option that is being checked or unchecked\n    const newSelection = e.target.value;\n    let newSelectionArray;\n    const platformData = data.platform;\n\n    if (data.visualisations.indexOf(newSelection) > -1) {\n      newSelectionArray = data.visualisations.filter(s => s !== newSelection);\n    } else {\n      newSelectionArray = [...data.visualisations, newSelection];\n    }\n\n    setData({\n      platform: platformData,\n      visualisations: newSelectionArray\n    });\n  };\n\n  const handleNewData = e => {\n    return setConfig(data);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    return setConfig(data); // setConfig(JSON.stringify(data))\n\n    return uploadFiles();\n  };\n\n  const handleClearForm = e => {\n    e.preventDefault();\n    setData({\n      platform: \"\",\n      visualisations: []\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"container-fluid\",\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      title: \"Platform\",\n      name: \"platform\",\n      options: platformOptions,\n      value: data.platform,\n      placeholder: \"Select Platform\",\n      handleChange: handleInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(CheckBox, {\n      title: \"Visualisations\",\n      name: \"visualisations\",\n      options: visualisationOptions,\n      selectedOptions: data.visualisations,\n      handleChange: handleCheckBox\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n      action: handleFormSubmit,\n      type: \"primary\",\n      title: \"Apply\",\n      style: buttonStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n      action: handleClearForm,\n      type: \"secondary\",\n      title: \"Clear\",\n      style: buttonStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Options, \"OksDu3SFi9oZzjXkwvpU8S8BhWw=\");\n\n_c = Options;\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\nexport default Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"names":["React","useState","useEffect","CheckBox","Select","Button","Options","props","setConfig","uploadFiles","config","files","data","setData","platform","visualisations","platformOptions","visualisationOptions","handleInput","e","value","target","visualisationData","handleCheckBox","newSelection","newSelectionArray","platformData","indexOf","filter","s","handleNewData","handleFormSubmit","preventDefault","handleClearForm","buttonStyle","margin"],"sources":["C:/1.Regine/PDA-APP/frontend/src/AnalysisPage/components/Upload/Options.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\n/* Import Components */\nimport CheckBox from \"./FormElements/Checkbox\";\nimport Select from \"./FormElements/Select\";\nimport Button from \"./FormElements/Button\";\n\nconst Options = (props) => {\n  const {setConfig, uploadFiles, config, files} = props\n  const [data, setData] = useState({platform: \"Dark Web\", visualisations: [\"Fake News\", \n  \"Stance Detection\", \"Summary\", \"Word Cloud\",\"Topic Modelling\", \"NER and Relation\"]})\n\n  const platformOptions = [\"Dark Web\", \"Twitter\", \"Facebook\", \"HardWareZone\", \"Reddit\"]\n\n  const visualisationOptions = [\"Fake News\", \"Stance Detection\", \"Summary\", \"Word Cloud\", \"Topic Modelling\", \"NER and Relation\"]\n\n  const handleInput = (e) => {\n    let value = e.target.value;\n    const visualisationData = data.visualisations\n    setData({\n      platform: value, visualisations: visualisationData \n    });\n  }\n\n  const handleCheckBox = (e) => {\n    //new selection is the option that is being checked or unchecked\n    const newSelection = e.target.value;\n    let newSelectionArray;\n    const platformData = data.platform;\n\n    if (data.visualisations.indexOf(newSelection) > -1) {\n      newSelectionArray = data.visualisations.filter(\n        s => s !== newSelection\n      );\n    } else {\n      newSelectionArray = [...data.visualisations, newSelection];\n    }\n\n    setData({\n      platform: platformData, visualisations: newSelectionArray\n    });\n  }\n\n  const handleNewData = (e) => {\n    return (setConfig(data))\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    return (setConfig(data))\n    // setConfig(JSON.stringify(data))\n    return (uploadFiles())\n  }\n\n const handleClearForm = (e) => {\n    e.preventDefault();\n    setData({\n        platform: \"\",\n        visualisations: []\n    });\n  }\n\n    return (\n      <form className=\"container-fluid\" onSubmit={handleFormSubmit}>\n        {/* Platform Selection */}\n        <Select\n          title={\"Platform\"}\n          name={\"platform\"}\n          options={platformOptions}\n          value={data.platform}\n          placeholder={\"Select Platform\"}\n          handleChange={handleInput}\n        />{\" \"}\n        \n        {/* Visualisation Section */}\n        <CheckBox\n          title={\"Visualisations\"}\n          name={\"visualisations\"}\n          options={visualisationOptions}\n          selectedOptions={data.visualisations}\n          handleChange={handleCheckBox}\n        />{\" \"}\n        \n        {/*Submit */}\n        <Button\n          action={handleFormSubmit}\n          type={\"primary\"}\n          title={\"Apply\"}\n          style={buttonStyle}\n        />{\" \"}\n        \n        {/* Clear the form */}\n        <Button\n          action={handleClearForm}\n          type={\"secondary\"}\n          title={\"Clear\"}\n          style={buttonStyle}\n        />{\" \"}\n        \n      </form>\n    );\n}\n\nconst buttonStyle = {\n  margin: \"10px 10px 10px 10px\"\n};\n\nexport default Options;"],"mappings":"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"},"metadata":{},"sourceType":"module"}