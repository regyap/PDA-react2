{"ast":null,"code":"var _jsxFileName = \"C:\\\\1.Regine\\\\PDA-APP\\\\frontend\\\\src\\\\AnalysisPage\\\\components\\\\dropbox\\\\DropzoneContainer.js\";\nimport React from 'react';\nimport './Dropzone.css';\nimport Dropzone from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropzoneContainer = props => {\n  // Checks whether the file passed in is a json\n  const isJson = fileType => {\n    if (fileType == 'json') {\n      return true;\n    } else {\n      return false;\n    }\n  }; // Check whether a json file has been uploaded previously. \n  // This is for consequtive uploads before pressing process\n\n\n  const checkHistoryForJson = history => {\n    for (var i = 0; i < history.length; i++) {\n      var fileType = history[i].path.split('.').slice(-1)[0];\n\n      if (isJson(fileType)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"fef\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this) // <Dropzone>\n  // </Dropzone>\n  // <Dropzone\n  //   onDrop={(acceptedFiles) =>{\n  //     if (acceptedFiles.length===1){\n  //       var fileType = acceptedFiles[0].path.split('.').slice(-1)[0];\n  //       if (isJson(fileType)) { \n  //         props.setFiles(acceptedFiles);\n  //       } else {\n  //         props.setFiles([...props.files, ...acceptedFiles]);\n  //       }\n  //     } else {\n  //       try{\n  //         for (var i=0; i<acceptedFiles.length; i++){\n  //           var fileType = acceptedFiles[i].path.split('.').slice(-1)[0];      \n  //           if (isJson(fileType)) {\n  //             alert(\"Only 1 .json file is accepted!\")\n  //             throw TypeError;\n  //           }\n  //         }\n  //         //check for json in history\n  //         var history = props.files\n  //         if (checkHistoryForJson(history)) {\n  //           alert(\"Only 1 .json file is accepted!\")\n  //         } else {\n  //           props.setFiles([...props.files, ...acceptedFiles]);\n  //         }\n  //       } \n  //       catch(TypeError) {\n  //         console.log(\"incorrect input\")\n  //       }\n  //     }\n  //   }\n  // }\n  // accept=\"application/pdf,text/plain,application/json,.csv,application/vnd.ms-excel\"\n  // >\n  //   {({\n  //     getRootProps,\n  //     getInputProps,\n  //     isDragAccept,\n  //     isDragActive,\n  //     isDragReject,\n  //   }) => {\n  //     const acceptClass = isDragAccept ? 'acceptStyle' : '';\n  //     const rejectClass = isDragReject ? 'rejectStyle' : '';\n  //     const activeClass = isDragActive ? 'activeStyle' : '';\n  //     return (\n  //       <div\n  //         {...getRootProps({\n  //           className: `dropzone ${acceptClass} ${rejectClass} ${activeClass}`,\n  //         })}\n  //       >\n  //         <input {...getInputProps()} />\n  //         <img\n  //           id='logo-image'\n  //           className='logo-image'\n  //           src={require('../../../images/logo.png')}\n  //           alt=\"Sentir logo\"\n  //         />\n  //         {isDragAccept && <span>All files will be accepted</span>}\n  //         {isDragReject && <span>Some files will be rejected</span>}\n  //         {!isDragActive && <span>Drop some files here!</span>}\n  //         <div className=\"footnote-text\">\n  //           <span>.json, .pdf, .csv and .txt files accepted</span>\n  //         </div>\n  //       </div>\n  //     );\n  //   }}\n  // </Dropzone>\n  ;\n};\n\n_c = DropzoneContainer;\nexport default DropzoneContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropzoneContainer\");","map":{"version":3,"names":["React","Dropzone","DropzoneContainer","props","isJson","fileType","checkHistoryForJson","history","i","length","path","split","slice"],"sources":["C:/1.Regine/PDA-APP/frontend/src/AnalysisPage/components/dropbox/DropzoneContainer.js"],"sourcesContent":["import React from 'react';\r\nimport './Dropzone.css';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nconst DropzoneContainer = (props) => {\r\n // Checks whether the file passed in is a json\r\n const isJson = (fileType) => {\r\n  if (fileType == 'json') {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\n// Check whether a json file has been uploaded previously. \r\n// This is for consequtive uploads before pressing process\r\nconst checkHistoryForJson = (history) => {\r\n  for (var i = 0; i < history.length; i++) {\r\n    var fileType = history[i].path.split('.').slice(-1)[0]\r\n    if (isJson(fileType)) {\r\n      return true;\r\n    } else {\r\n      return false; \r\n    }\r\n  }\r\n}\r\n \r\n  return (\r\n    \r\n\r\n    <h1>fef</h1>\r\n    // <Dropzone>\r\n      \r\n    // </Dropzone>\r\n    // <Dropzone\r\n    //   onDrop={(acceptedFiles) =>{\r\n    //     if (acceptedFiles.length===1){\r\n    //       var fileType = acceptedFiles[0].path.split('.').slice(-1)[0];\r\n    //       if (isJson(fileType)) { \r\n    //         props.setFiles(acceptedFiles);\r\n    //       } else {\r\n    //         props.setFiles([...props.files, ...acceptedFiles]);\r\n    //       }\r\n    //     } else {\r\n    //       try{\r\n    //         for (var i=0; i<acceptedFiles.length; i++){\r\n    //           var fileType = acceptedFiles[i].path.split('.').slice(-1)[0];      \r\n    //           if (isJson(fileType)) {\r\n    //             alert(\"Only 1 .json file is accepted!\")\r\n    //             throw TypeError;\r\n    //           }\r\n    //         }\r\n    //         //check for json in history\r\n    //         var history = props.files\r\n    //         if (checkHistoryForJson(history)) {\r\n    //           alert(\"Only 1 .json file is accepted!\")\r\n    //         } else {\r\n    //           props.setFiles([...props.files, ...acceptedFiles]);\r\n    //         }\r\n    //       } \r\n    //       catch(TypeError) {\r\n    //         console.log(\"incorrect input\")\r\n    //       }\r\n    //     }\r\n        \r\n    //   }\r\n    // }\r\n    // accept=\"application/pdf,text/plain,application/json,.csv,application/vnd.ms-excel\"\r\n\r\n    // >\r\n    //   {({\r\n    //     getRootProps,\r\n    //     getInputProps,\r\n    //     isDragAccept,\r\n    //     isDragActive,\r\n    //     isDragReject,\r\n    //   }) => {\r\n    //     const acceptClass = isDragAccept ? 'acceptStyle' : '';\r\n    //     const rejectClass = isDragReject ? 'rejectStyle' : '';\r\n    //     const activeClass = isDragActive ? 'activeStyle' : '';\r\n    //     return (\r\n    //       <div\r\n    //         {...getRootProps({\r\n    //           className: `dropzone ${acceptClass} ${rejectClass} ${activeClass}`,\r\n    //         })}\r\n    //       >\r\n    //         <input {...getInputProps()} />\r\n    //         <img\r\n    //           id='logo-image'\r\n    //           className='logo-image'\r\n    //           src={require('../../../images/logo.png')}\r\n    //           alt=\"Sentir logo\"\r\n    //         />\r\n    //         {isDragAccept && <span>All files will be accepted</span>}\r\n    //         {isDragReject && <span>Some files will be rejected</span>}\r\n    //         {!isDragActive && <span>Drop some files here!</span>}\r\n    //         <div className=\"footnote-text\">\r\n    //           <span>.json, .pdf, .csv and .txt files accepted</span>\r\n    //         </div>\r\n    //       </div>\r\n    //     );\r\n    //   }}\r\n    // </Dropzone>\r\n  );\r\n};\r\n\r\nexport default DropzoneContainer;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,gBAArB;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;EACpC;EACA,MAAMC,MAAM,GAAIC,QAAD,IAAc;IAC5B,IAAIA,QAAQ,IAAI,MAAhB,EAAwB;MACtB,OAAO,IAAP;IACD,CAFD,MAEO;MACL,OAAO,KAAP;IACD;EACF,CANA,CAFoC,CAUrC;EACA;;;EACA,MAAMC,mBAAmB,GAAIC,OAAD,IAAa;IACvC,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;MACvC,IAAIH,QAAQ,GAAGE,OAAO,CAACC,CAAD,CAAP,CAAWE,IAAX,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2BC,KAA3B,CAAiC,CAAC,CAAlC,EAAqC,CAArC,CAAf;;MACA,IAAIR,MAAM,CAACC,QAAD,CAAV,EAAsB;QACpB,OAAO,IAAP;MACD,CAFD,MAEO;QACL,OAAO,KAAP;MACD;IACF;EACF,CATD;;EAWE,oBAGE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAHF,CAIE;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA3EF;AA6ED,CApGD;;KAAMH,iB;AAsGN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}